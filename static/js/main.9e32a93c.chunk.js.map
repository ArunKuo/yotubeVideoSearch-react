{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","placeholder","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","onClick","onVideoSelect","video","alt","snippet","title","src","thumbnails","medium","url","videoList","renderedList","videos","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVido","onTermSubmit","a","youtube","get","q","response","data","items","VideoList","ReactDOM","render","document","querySelector"],"mappings":"mRAqCeA,E,4MAjCXC,MAAO,CAACC,KAAM,I,EAGdC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACH,KAAME,EAAME,OAAOC,S,EAGpCC,aAAe,SAACJ,GACZA,EAAMK,iBAGN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAInC,OACA,yBAAKS,UAAU,yBACZ,0BAAMC,SAAUC,KAAKL,aAAeG,UAAU,WACzC,yBAAKA,UAAU,SACX,2DACA,2BACAG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,cACfa,YAAY,wB,GA1BRC,IAAMC,W,QCGfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAK,UACLT,KAAK,QACLU,WAAY,EACZC,IATI,6CCcGC,G,MAbG,SAAChB,GAEf,OACI,yBAAKiB,QAAS,kBAAIjB,EAAMkB,cAAclB,EAAMmB,QAAQlB,UAAU,mBAC1D,yBAAKmB,IAAKpB,EAAMmB,MAAME,QAAQC,MAAOrB,UAAU,WAAWsB,IAAKvB,EAAMmB,MAAME,QAAQG,WAAWC,OAAOC,MACrG,yBAAKzB,UAAU,WACX,yBAAKA,UAAU,UAAUD,EAAMmB,MAAME,QAAQC,WCO9CK,EAbG,SAAC3B,GAEhB,IAAM4B,EAAe5B,EAAM6B,OAAOC,KAAI,SAACX,GAClC,OAAO,kBAAC,EAAD,CAAWJ,IAAKI,EAAMY,GAAGC,QAASd,cAAelB,EAAMkB,cAAeC,MAAOA,OAGxF,OACI,yBAAKlB,UAAU,2BACV2B,ICaEK,EAtBK,SAACjC,GACrB,IAAIA,EAAMmB,MACN,OAAO,yDAGX,IAAMe,EAAQ,wCAAoClC,EAAMmB,MAAMY,GAAGC,SAG7D,OACI,6BACI,yBAAK/B,UAAU,YACX,4BAAQqB,MAAM,eAAeC,IAAKW,KAEtC,yBAAKjC,UAAU,cACX,wBAAIA,UAAU,aAAaD,EAAMmB,MAAME,QAAQC,OAC/C,2BAAItB,EAAMmB,MAAME,QAAQc,gBCsCzBC,G,kNA9CX7C,MAAQ,CACJsC,OAAQ,GACRQ,aAAc,M,EAOlBC,a,uCAAc,WAAO9C,GAAP,eAAA+C,EAAA,sEACUC,EAAQC,IAAI,UAAU,CACtC7B,OAAQ,CACJ8B,EAAGlD,KAHD,OACPmD,EADO,OAOV,EAAKhD,SAAS,CAACkC,OAAQc,EAASC,KAAKC,MACjCR,aAAcM,EAASC,KAAKC,MAAM,KAR5B,2C,wDAad3B,cAAgB,SAACC,GACb,EAAKxB,SAAS,CAAC0C,aAAclB,K,kEAjB7BhB,KAAKmC,aAAa,c,+BAqBlB,OACI,yBAAKrC,UAAU,gBACX,kBAAC,EAAD,CAAWH,aAAcK,KAAKmC,eAE9B,yBAAKrC,UAAU,IACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,UACf,kBAAC,EAAD,CAAakB,MAAOhB,KAAKZ,MAAM8C,gBAE/B,yBAAKpC,UAAU,SACf,kBAAC6C,EAAD,CAAW5B,cAAef,KAAKe,cAAeW,OAAQ1B,KAAKZ,MAAMsC,iB,GAvCvEtB,IAAMC,YCHxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.9e32a93c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    state= {term: \"\"};\r\n\r\n    // 自定義Function\r\n    onInputChange = (event) =>{\r\n      this.setState({term: event.target.value});\r\n    };\r\n\r\n    onFormSubmit = (event)=>{\r\n        event.preventDefault();\r\n        \r\n        // TOD: 確認 從parent元件呼叫callback \r\n        this.props.onFormSubmit(this.state.term);\r\n    };\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"search-bar ui segment\">\r\n           <form onSubmit={this.onFormSubmit}  className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>影片搜尋</label>\r\n                    <input \r\n                    type=\"text\"  \r\n                    value={this.state.term} \r\n                    onChange={this.onInputChange}     \r\n                    placeholder=\"搜尋\"               \r\n                    />\r\n                </div>\r\n           </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = \"AIzaSyC7C8Nyl9qSdAq0MiBFIt5m4psXZwuKKdE\";\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n    params: {\r\n        part:\"snippet\",\r\n        type:\"video\",\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n});","import React from 'react';\r\nimport './VideoItem.css' ;\r\n\r\nconst VideoItem = (props)=>{\r\n\r\n    return (\r\n        <div onClick={()=>props.onVideoSelect(props.video)} className=\"video-item item\">\r\n            <img alt={props.video.snippet.title} className=\"ui image\" src={props.video.snippet.thumbnails.medium.url} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{props.video.snippet.title}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst videoList = (props)=>{\r\n\r\n   const renderedList = props.videos.map((video)=>{\r\n        return <VideoItem key={video.id.videoId} onVideoSelect={props.onVideoSelect} video={video} />\r\n    });\r\n\r\n    return(\r\n        <div className=\"ui relaxed divided list\">\r\n            {renderedList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default videoList;","import React from 'react';\r\n\r\nconst VideoDetail = (props) =>{\r\nif(!props.video){\r\n    return <div>讀取中......</div>\r\n}\r\n\r\nconst videoSrc = `https://www.youtube.com/embed/${props.video.id.videoId}`\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"video player\" src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{props.video.snippet.title}</h4>\r\n                <p>{props.video.snippet.description}</p>\r\n            </div>        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        videos: [],\r\n        selectedVido: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.onTermSubmit('Hololive');\r\n    }\r\n\r\n    onTermSubmit =async (term)=>{\r\n     const response = await youtube.get('/search',{\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        this.setState({videos: response.data.items,\r\n            selectedVido: response.data.items[0]\r\n        });\r\n\r\n    };\r\n\r\n    onVideoSelect = (video) =>{\r\n        this.setState({selectedVido: video});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\">\r\n                <SearchBar onFormSubmit={this.onTermSubmit}/>\r\n\r\n                <div className=\"\">\r\n                    <div className=\"videos-container\">\r\n                        <div className=\"player\">\r\n                        <VideoDetail video={this.state.selectedVido}/>\r\n                        </div>\r\n                        <div className=\"lists\">\r\n                        <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}